# На вход программа получает набор чисел, заканчивающихся решеткой. Вам требуется найти: среднее, максимальное
# и минимальное число в последовательности. Так же нужно вывести cумму остатков от деления суммы троек на последнее
# число тройки (каждые 3 введеных числа образуют тройку).
# Для понимания рассмотрим пример входных данных: 1 2 3 4 5 6 среднее: (1 + 2 + 3 + 4 + 5 + 6) / 6 = 3.5
# максимум: 6 минимум: 1 сумма остатков троек: (1 + 2 + 3) mod 3 + (4 + 5 + 6) mod 6 = 6 mod 3 + 15 mod 6 = 0 + 3 = 3
# Среднее выводить, округлив до трех знаков после запятой. Для этого нужно использовать функцию round(x, 3)
# Того ваша программа должна вывести: 3.5 6 1 3
# Подумайте, имеет ли смысл хранить всю последовательность.
# Формат входных данных
# Последовательность чисел, заканчивающися '#'. Все числа от 1 до 100. Количество чисел в последовательности
# кратно трем. Одно число на строку.
# Формат выходных данных
# Четыре числа, разделенных пробелом.

b = []
sum1 = 0
max1 = 0
min1 = 1001
r = 0
try:
    while True:

        b.append(input())
        if b[-1] == '#':
            break
        sum1 += int(b[-1])
        if max1 < int(b[-1]):
            max1 = int(b[-1])
        if min1 > int(b[-1]):
            min1 = int(b[-1])
        if len(b) % 3 == 0:
            r += (int(b[-3])+int(b[-2])+int(b[-1])) % int(b[-1])

except ValueError:
    b.append(b[0])
    b.remove(b[0])
finally:
    if b[-1] != '#':
        b.append(b[0])
        b.remove(b[0])
        print(' '.join(b))
    else:
        print(round(sum1 / (len(b) - 1), 3), max1, min1, r)


